name: CI Build and Release
on:
  push:
        tags:
        - 'v*'
  workflow_run:
    workflows: ["Code Checkstyle"]
    types:
      - completed
jobs:
  BuildDebugApk:
      name: Build Debug APK
      runs-on: ubuntu-latest
      steps:
        # https://github.com/actions/checkout
        - name: git-checkout
          uses: actions/checkout@v2
        - name: Set up JDK environment
          uses: actions/setup-java@v2.5.0
          with:
            distribution: 'zulu' 
            java-version: '11'
        - name: Set execution flag for gradlew
          run: chmod +x gradlew
        - name: Build Debug APK
          run: bash ./gradlew assembleDebug --stacktrace
        - name: Upload_APK
          uses: actions/upload-artifact@v3.0.0
          with:
            name: debug
            path: app/build/outputs/apk/debug/app-debug.apk     

  BuildReleaseApk:
        name: Build Release APK
        runs-on: ubuntu-latest
        if: startsWith(github.ref, 'refs/tags/v')
        steps:
          - name: git-checkout
            uses: actions/checkout@v2
          - name: Set up JDK environment
            uses: actions/setup-java@v2.5.0
            with:
              distribution: 'zulu' # See 'Supported distributions' for available options
              java-version: '11'
          - name: Set execution flag for gradlew
            run: chmod +x gradlew
          - name: Build Release APK
            run: bash ./gradlew assembleRelease --stacktrace
          - name: Upload_APK
            uses: actions/upload-artifact@v3.0.0
            with:
              name: Release Unsigned
              path: app/build/outputs/apk/release/app-release-unsigned.apk
 
        

  SignReleaseApk:
    name: Sign Release Apk
    needs: BuildReleaseApk
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: Release Unsigned
      - name: Sign artifact
        uses: r0adkll/sign-android-release@v1.0.4
        with:
          releaseDirectory: .
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.SIGNING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_PASSWORD }}
          
      - name: Rename APK to signed
        run: mv app-release-unsigned-signed.apk app-release-signed.apk
        shell: bash
        
      - name: Upload our APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: Release signed
          path: app-release-signed.apk
          
  ReleaseApk:
    name: Create Release with Apk
    needs: SignReleaseApk
    runs-on: ubuntu-latest
    steps:
    
      - name: Save Version To Environment
        run: echo "VERSION=$(echo '${{ github.ref }}' | awk -F 'refs.tags.' '{print $2}')" >> $GITHUB_ENV; echo $VERSION
        shell: bash
        
      - name: Download Release App Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          name: Release signed
         
      - name: Rename APK With App And Version Names
        run: mv app-release-signed.apk ur_botanist-${{ env.VERSION }}.apk
        shell: bash
        
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.VERSION }}
          
      - name: Upload App Apk To Release
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ur_botanist-${{ env.VERSION }}.apk
          asset_name: ur_botanist-${{ env.VERSION }}.apk
          asset_content_type: application/zip
       
